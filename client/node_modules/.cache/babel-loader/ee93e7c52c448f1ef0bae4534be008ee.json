{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; // Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/kazuma/WebDevelopment/MSF2B/client/src/actions/post.js"],"names":["axios","setAlert","ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","GET_POST","addLike","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,UAJJ,EAKIC,YALJ,QAMO,SANP,C,CAQA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,YAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,SADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,OAAO,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC3C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,cAAaU,EAAG,EAA3B,CAAlB;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEU,QADD;AAELT,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMI,OAAO,GAAGF,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC3C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACuB,GAAN,CAAW,mBAAkBH,EAAG,EAAhC,CAAlB;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,YADD;AAELM,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,EAAF;AAAMI,QAAAA,KAAK,EAAEf,GAAG,CAACI;AAAjB;AAFJ,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMO,UAAU,GAAGL,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC9C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACuB,GAAN,CAAW,qBAAoBH,EAAG,EAAlC,CAAlB;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,YADD;AAELM,MAAAA,OAAO,EAAE;AAAEQ,QAAAA,EAAF;AAAMI,QAAAA,KAAK,EAAEf,GAAG,CAACI;AAAjB;AAFJ,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMQ,UAAU,GAAGN,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC9C,MAAI;AACA,UAAMR,KAAK,CAAC2B,MAAN,CAAc,cAAaP,EAAG,EAA9B,CAAN;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,WADD;AAELS,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAIAZ,IAAAA,QAAQ,CAACP,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACH,GARD,CAQE,OAAOa,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMU,OAAO,GAAGC,QAAQ,IAAI,MAAMrB,QAAN,IAAkB;AACjD,QAAMsB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAMA,MAAI;AACA,UAAMtB,GAAG,GAAG,MAAMT,KAAK,CAACgC,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCC,MAAnC,CAAlB;AAEAtB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,QADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACP,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACH,GARD,CAQE,OAAOa,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AACEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AADvB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAvBM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    ADD_POST,\n    DELETE_POST,\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES\n} from './types'\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};\n\n// Get Post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};\n\n// Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        });\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};\n\n// Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};\n\n// Add Post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    try {\n        const res = await axios.post('/api/posts', formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, \n                       status: err.response.status\n                     }\n        });\n    }\n};"]},"metadata":{},"sourceType":"module"}