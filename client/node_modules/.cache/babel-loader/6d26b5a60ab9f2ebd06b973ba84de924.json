{"ast":null,"code":"var _jsxFileName = \"/home/kazuma/WebDevelopment/MSF2B/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }, \"Back To Profiles\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/kazuma/WebDevelopment/MSF2B/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACbD,EAAAA,cADa;AAEbE,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAFI;AAGbC,EAAAA,IAHa;AAIbC,EAAAA;AAJa,CAAD,KAKV;AACFV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACP,cAAD,EAAiBK,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAED,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAU,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAV,CAHJ,CADJ;AAUH,CApBD;;AAsBAF,OAAO,CAACO,SAAR,GAAoB;AAChBR,EAAAA,cAAc,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADf;AAEhBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFV;AAGhBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADe;AAE9BE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFkB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({ \n    getProfileById, \n    profile: {profile, loading }, \n    auth, \n    match \n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n    return (\n        <Fragment>\n            {profile === null || loading ? \n            <Spinner /> : \n            <Fragment><Link to='/profiles' className='btn btn-light'>\n                    Back To Profiles\n                </Link>\n            </Fragment>}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);"]},"metadata":{},"sourceType":"module"}