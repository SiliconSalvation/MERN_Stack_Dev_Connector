{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, AUTH_ERROR, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; // Get the current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    console.log(res.data);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account & profile\n// Delete education\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure you want to delete your account? This CANNOT be undone!')) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Profile Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: CLEAR_PROFILE,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/kazuma/WebDevelopment/MSF2B/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","AUTH_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","console","log","data","type","payload","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    AUTH_ERROR,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED,\n} from './types';\n\n// Get the current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    console.log(res.data);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (\n    formData,\n    history,\n    edit = false\n  ) => async dispatch => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n  \n      const res = await axios.post('/api/profile', formData, config);\n  \n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n  \n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n  \n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n  \n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n      const res = await axios.delete(`/api/profile/experience/${id}`);\n\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = id => async dispatch => {\n  try {\n      const res = await axios.delete(`/api/profile/education/${id}`);\n\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete account & profile\n// Delete education\nexport const deleteAccount = () => async dispatch => {\n\n  if(window.confirm('Are you sure you want to delete your account? This CANNOT be undone!')) {\n      try {\n        const res = await axios.delete(`/api/profile`);\n\n        dispatch({ type: CLEAR_PROFILE });\n        dispatch({ type: ACCOUNT_DELETED })\n\n        dispatch(setAlert('Profile Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: CLEAR_PROFILE,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }  \n};"]},"metadata":{},"sourceType":"module"}