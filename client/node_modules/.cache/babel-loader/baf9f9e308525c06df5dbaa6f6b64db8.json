{"ast":null,"code":"var _jsxFileName = \"/home/kazuma/WebDevelopment/MSF2B/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Experience\"), profile.experieProfileGitHubnce.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }\n  }, \"Experience Not Found\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  }, \"Education Not Found\")), profile.githubusername && /*#__PURE__*/React.createElement(ProfileGithub, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/kazuma/WebDevelopment/MSF2B/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experieProfileGitHubnce","length","experience","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({ \n    getProfileById, \n    profile: {profile, loading }, \n    auth, \n    match \n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n    return (\n        <Fragment>\n            {profile === null || loading ? \n            <Spinner /> : \n            <Fragment><Link to='/profiles' className='btn btn-light'>\n                    Back To Profiles\n                </Link>\n                {auth.isAuthenticated && \n                auth.loading === false && \n                auth.user._id === profile.user._id && \n                (<Link to='/edit-profile'\n                className='btn btn-dark'>\n                    Edit Profile\n                </Link>\n                )}\n                <div className=\"profile-grid my-1\">\n                    <ProfileTop profile={profile} />\n                    <ProfileAbout profile={profile} />\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experieProfileGitHubnce.length > \n                        0 ? \n                        (<Fragment>\n                            {profile.experience.map(experience => (\n                                <ProfileExperience key={experience._id} experience={experience}/>\n                            ))}\n                        </Fragment>) : \n                        (<h4>Experience Not Found</h4>)}\n                    </div>\n\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length > \n                        0 ? \n                        (<Fragment>\n                            {profile.education.map(education => (\n                                <ProfileEducation key={education._id} education={education}/>\n                            ))}\n                        </Fragment>) : \n                        (<h4>Education Not Found</h4>)}\n                    </div>\n\n                    {profile.githubusername && (\n                        <ProfileGithub />\n                    )}\n                </div>\n\n\n                \n            </Fragment>}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);"]},"metadata":{},"sourceType":"module"}